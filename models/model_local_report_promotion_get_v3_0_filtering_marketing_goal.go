/*
Oceanengine Open Api

巨量引擎开放平台 Open Api

API version: 1.1.15
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"fmt"
)

// LocalReportPromotionGetV30FilteringMarketingGoal
type LocalReportPromotionGetV30FilteringMarketingGoal string

// List of local_report_promotion_get_v3.0_filtering_marketing_goal
const (
	LIVE_LocalReportPromotionGetV30FilteringMarketingGoal        LocalReportPromotionGetV30FilteringMarketingGoal = "LIVE"
	VIDEO_IMAGE_LocalReportPromotionGetV30FilteringMarketingGoal LocalReportPromotionGetV30FilteringMarketingGoal = "VIDEO_IMAGE"
)

// All allowed values of LocalReportPromotionGetV30FilteringMarketingGoal enum
var AllowedLocalReportPromotionGetV30FilteringMarketingGoalEnumValues = []LocalReportPromotionGetV30FilteringMarketingGoal{
	"LIVE",
	"VIDEO_IMAGE",
}

// NewLocalReportPromotionGetV30FilteringMarketingGoalFromValue returns a pointer to a valid LocalReportPromotionGetV30FilteringMarketingGoal
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewLocalReportPromotionGetV30FilteringMarketingGoalFromValue(v string) (*LocalReportPromotionGetV30FilteringMarketingGoal, error) {
	ev := LocalReportPromotionGetV30FilteringMarketingGoal(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for LocalReportPromotionGetV30FilteringMarketingGoal: valid values are %v", v, AllowedLocalReportPromotionGetV30FilteringMarketingGoalEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v LocalReportPromotionGetV30FilteringMarketingGoal) IsValid() bool {
	for _, existing := range AllowedLocalReportPromotionGetV30FilteringMarketingGoalEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to local_report_promotion_get_v3.0_filtering_marketing_goal value
func (v LocalReportPromotionGetV30FilteringMarketingGoal) Ptr() *LocalReportPromotionGetV30FilteringMarketingGoal {
	return &v
}
