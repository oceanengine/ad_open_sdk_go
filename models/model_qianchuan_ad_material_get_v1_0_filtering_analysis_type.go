/*
Oceanengine Open Api

巨量引擎开放平台 Open Api

API version: 1.1.15
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"fmt"
)

// QianchuanAdMaterialGetV10FilteringAnalysisType
type QianchuanAdMaterialGetV10FilteringAnalysisType string

// List of qianchuan_ad_material_get_v1.0_filtering_analysis_type
const (
	CARRY_MATERIAL_QianchuanAdMaterialGetV10FilteringAnalysisType          QianchuanAdMaterialGetV10FilteringAnalysisType = "CARRY_MATERIAL"
	LOW_EFFICIENCY_MATERIAL_QianchuanAdMaterialGetV10FilteringAnalysisType QianchuanAdMaterialGetV10FilteringAnalysisType = "LOW_EFFICIENCY_MATERIAL"
	FIRST_PUBLISH_MATERIAL_QianchuanAdMaterialGetV10FilteringAnalysisType  QianchuanAdMaterialGetV10FilteringAnalysisType = "FIRST_PUBLISH_MATERIAL"
	SIMILAR_RISK_MATERIAL_QianchuanAdMaterialGetV10FilteringAnalysisType   QianchuanAdMaterialGetV10FilteringAnalysisType = "SIMILAR_RISK_MATERIAL"
	HIGH_QUALITY_MATERIAL_QianchuanAdMaterialGetV10FilteringAnalysisType   QianchuanAdMaterialGetV10FilteringAnalysisType = "HIGH_QUALITY_MATERIAL"
	POOR_QUALITY_MATERIAL_QianchuanAdMaterialGetV10FilteringAnalysisType   QianchuanAdMaterialGetV10FilteringAnalysisType = "POOR_QUALITY_MATERIAL"
)

// All allowed values of QianchuanAdMaterialGetV10FilteringAnalysisType enum
var AllowedQianchuanAdMaterialGetV10FilteringAnalysisTypeEnumValues = []QianchuanAdMaterialGetV10FilteringAnalysisType{
	"CARRY_MATERIAL",
	"LOW_EFFICIENCY_MATERIAL",
	"FIRST_PUBLISH_MATERIAL",
	"SIMILAR_RISK_MATERIAL",
	"HIGH_QUALITY_MATERIAL",
	"POOR_QUALITY_MATERIAL",
}

// NewQianchuanAdMaterialGetV10FilteringAnalysisTypeFromValue returns a pointer to a valid QianchuanAdMaterialGetV10FilteringAnalysisType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewQianchuanAdMaterialGetV10FilteringAnalysisTypeFromValue(v string) (*QianchuanAdMaterialGetV10FilteringAnalysisType, error) {
	ev := QianchuanAdMaterialGetV10FilteringAnalysisType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for QianchuanAdMaterialGetV10FilteringAnalysisType: valid values are %v", v, AllowedQianchuanAdMaterialGetV10FilteringAnalysisTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v QianchuanAdMaterialGetV10FilteringAnalysisType) IsValid() bool {
	for _, existing := range AllowedQianchuanAdMaterialGetV10FilteringAnalysisTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to qianchuan_ad_material_get_v1.0_filtering_analysis_type value
func (v QianchuanAdMaterialGetV10FilteringAnalysisType) Ptr() *QianchuanAdMaterialGetV10FilteringAnalysisType {
	return &v
}
