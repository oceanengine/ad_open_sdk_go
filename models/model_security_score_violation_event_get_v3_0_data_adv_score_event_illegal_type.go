/*
Oceanengine Open Api

巨量引擎开放平台 Open Api

API version: 1.1.15
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"fmt"
)

// SecurityScoreViolationEventGetV30DataAdvScoreEventIllegalType
type SecurityScoreViolationEventGetV30DataAdvScoreEventIllegalType string

// List of security_score_violation_event_get_v3.0_data_adv_score_event_illegal_type
const (
	GENERAL_SecurityScoreViolationEventGetV30DataAdvScoreEventIllegalType       SecurityScoreViolationEventGetV30DataAdvScoreEventIllegalType = "GENERAL"
	ONECLASS_SecurityScoreViolationEventGetV30DataAdvScoreEventIllegalType      SecurityScoreViolationEventGetV30DataAdvScoreEventIllegalType = "ONECLASS"
	SERIOUS_SecurityScoreViolationEventGetV30DataAdvScoreEventIllegalType       SecurityScoreViolationEventGetV30DataAdvScoreEventIllegalType = "SERIOUS"
	TWOTHREECLASS_SecurityScoreViolationEventGetV30DataAdvScoreEventIllegalType SecurityScoreViolationEventGetV30DataAdvScoreEventIllegalType = "TWOTHREECLASS"
)

// All allowed values of SecurityScoreViolationEventGetV30DataAdvScoreEventIllegalType enum
var AllowedSecurityScoreViolationEventGetV30DataAdvScoreEventIllegalTypeEnumValues = []SecurityScoreViolationEventGetV30DataAdvScoreEventIllegalType{
	"GENERAL",
	"ONECLASS",
	"SERIOUS",
	"TWOTHREECLASS",
}

// NewSecurityScoreViolationEventGetV30DataAdvScoreEventIllegalTypeFromValue returns a pointer to a valid SecurityScoreViolationEventGetV30DataAdvScoreEventIllegalType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSecurityScoreViolationEventGetV30DataAdvScoreEventIllegalTypeFromValue(v string) (*SecurityScoreViolationEventGetV30DataAdvScoreEventIllegalType, error) {
	ev := SecurityScoreViolationEventGetV30DataAdvScoreEventIllegalType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SecurityScoreViolationEventGetV30DataAdvScoreEventIllegalType: valid values are %v", v, AllowedSecurityScoreViolationEventGetV30DataAdvScoreEventIllegalTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SecurityScoreViolationEventGetV30DataAdvScoreEventIllegalType) IsValid() bool {
	for _, existing := range AllowedSecurityScoreViolationEventGetV30DataAdvScoreEventIllegalTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to security_score_violation_event_get_v3.0_data_adv_score_event_illegal_type value
func (v SecurityScoreViolationEventGetV30DataAdvScoreEventIllegalType) Ptr() *SecurityScoreViolationEventGetV30DataAdvScoreEventIllegalType {
	return &v
}
