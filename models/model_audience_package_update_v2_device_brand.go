/*
Oceanengine Open Api

巨量引擎开放平台 Open Api

API version: 1.1.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"fmt"
)

// AudiencePackageUpdateV2DeviceBrand
type AudiencePackageUpdateV2DeviceBrand string

// List of audience_package_update_v2_device_brand
const (
	MEIZU_AudiencePackageUpdateV2DeviceBrand       AudiencePackageUpdateV2DeviceBrand = "MEIZU"
	NUBIA_AudiencePackageUpdateV2DeviceBrand       AudiencePackageUpdateV2DeviceBrand = "NUBIA"
	CHINAMOBILE_AudiencePackageUpdateV2DeviceBrand AudiencePackageUpdateV2DeviceBrand = "CHINAMOBILE"
	GIONEE_AudiencePackageUpdateV2DeviceBrand      AudiencePackageUpdateV2DeviceBrand = "GIONEE"
	HUAWEI_AudiencePackageUpdateV2DeviceBrand      AudiencePackageUpdateV2DeviceBrand = "HUAWEI"
	SAMSUNG_AudiencePackageUpdateV2DeviceBrand     AudiencePackageUpdateV2DeviceBrand = "SAMSUNG"
	LENOVO_AudiencePackageUpdateV2DeviceBrand      AudiencePackageUpdateV2DeviceBrand = "LENOVO"
	COOLPAD_AudiencePackageUpdateV2DeviceBrand     AudiencePackageUpdateV2DeviceBrand = "COOLPAD"
	ONEPLUS_AudiencePackageUpdateV2DeviceBrand     AudiencePackageUpdateV2DeviceBrand = "ONEPLUS"
	GOOGLE_AudiencePackageUpdateV2DeviceBrand      AudiencePackageUpdateV2DeviceBrand = "GOOGLE"
	HTC_AudiencePackageUpdateV2DeviceBrand         AudiencePackageUpdateV2DeviceBrand = "HTC"
	NOKIA_AudiencePackageUpdateV2DeviceBrand       AudiencePackageUpdateV2DeviceBrand = "NOKIA"
	LG_AudiencePackageUpdateV2DeviceBrand          AudiencePackageUpdateV2DeviceBrand = "LG"
	QIKU_AudiencePackageUpdateV2DeviceBrand        AudiencePackageUpdateV2DeviceBrand = "QIKU"
	TCL_AudiencePackageUpdateV2DeviceBrand         AudiencePackageUpdateV2DeviceBrand = "TCL"
	HONOR_AudiencePackageUpdateV2DeviceBrand       AudiencePackageUpdateV2DeviceBrand = "HONOR"
	ZTE_AudiencePackageUpdateV2DeviceBrand         AudiencePackageUpdateV2DeviceBrand = "ZTE"
	SONY_AudiencePackageUpdateV2DeviceBrand        AudiencePackageUpdateV2DeviceBrand = "SONY"
	HISENSE_AudiencePackageUpdateV2DeviceBrand     AudiencePackageUpdateV2DeviceBrand = "HISENSE"
	SMARTISAN_AudiencePackageUpdateV2DeviceBrand   AudiencePackageUpdateV2DeviceBrand = "SMARTISAN"
	PEPPER_AudiencePackageUpdateV2DeviceBrand      AudiencePackageUpdateV2DeviceBrand = "PEPPER"
	Enum_360_AudiencePackageUpdateV2DeviceBrand    AudiencePackageUpdateV2DeviceBrand = "360"
	VIVO_AudiencePackageUpdateV2DeviceBrand        AudiencePackageUpdateV2DeviceBrand = "VIVO"
	MOTO_AudiencePackageUpdateV2DeviceBrand        AudiencePackageUpdateV2DeviceBrand = "MOTO"
	LETV_AudiencePackageUpdateV2DeviceBrand        AudiencePackageUpdateV2DeviceBrand = "LETV"
	XIAOMI_AudiencePackageUpdateV2DeviceBrand      AudiencePackageUpdateV2DeviceBrand = "XIAOMI"
	OPPO_AudiencePackageUpdateV2DeviceBrand        AudiencePackageUpdateV2DeviceBrand = "OPPO"
	APPLE_AudiencePackageUpdateV2DeviceBrand       AudiencePackageUpdateV2DeviceBrand = "APPLE"
)

// All allowed values of AudiencePackageUpdateV2DeviceBrand enum
var AllowedAudiencePackageUpdateV2DeviceBrandEnumValues = []AudiencePackageUpdateV2DeviceBrand{
	"MEIZU",
	"NUBIA",
	"CHINAMOBILE",
	"GIONEE",
	"HUAWEI",
	"SAMSUNG",
	"LENOVO",
	"COOLPAD",
	"ONEPLUS",
	"GOOGLE",
	"HTC",
	"NOKIA",
	"LG",
	"QIKU",
	"TCL",
	"HONOR",
	"ZTE",
	"SONY",
	"HISENSE",
	"SMARTISAN",
	"PEPPER",
	"360",
	"VIVO",
	"MOTO",
	"LETV",
	"XIAOMI",
	"OPPO",
	"APPLE",
}

// NewAudiencePackageUpdateV2DeviceBrandFromValue returns a pointer to a valid AudiencePackageUpdateV2DeviceBrand
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAudiencePackageUpdateV2DeviceBrandFromValue(v string) (*AudiencePackageUpdateV2DeviceBrand, error) {
	ev := AudiencePackageUpdateV2DeviceBrand(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AudiencePackageUpdateV2DeviceBrand: valid values are %v", v, AllowedAudiencePackageUpdateV2DeviceBrandEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AudiencePackageUpdateV2DeviceBrand) IsValid() bool {
	for _, existing := range AllowedAudiencePackageUpdateV2DeviceBrandEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to audience_package_update_v2_device_brand value
func (v AudiencePackageUpdateV2DeviceBrand) Ptr() *AudiencePackageUpdateV2DeviceBrand {
	return &v
}
