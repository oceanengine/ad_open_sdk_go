/*
Oceanengine Open Api

巨量引擎开放平台 Open Api

API version: 1.0.16
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"fmt"
)

// ToolsOrangeSiteGetV30DataListFunctionType
type ToolsOrangeSiteGetV30DataListFunctionType string

// List of tools_orange_site_get_v3.0_data_list_function_type
const (
	SITE_FUNC_TYPE_NEW_MODULAR_ToolsOrangeSiteGetV30DataListFunctionType ToolsOrangeSiteGetV30DataListFunctionType = "SITE_FUNC_TYPE_NEW_MODULAR"
	SITE_FUNC_TYPE_NORMAL_ToolsOrangeSiteGetV30DataListFunctionType      ToolsOrangeSiteGetV30DataListFunctionType = "SITE_FUNC_TYPE_NORMAL"
)

// All allowed values of ToolsOrangeSiteGetV30DataListFunctionType enum
var AllowedToolsOrangeSiteGetV30DataListFunctionTypeEnumValues = []ToolsOrangeSiteGetV30DataListFunctionType{
	"SITE_FUNC_TYPE_NEW_MODULAR",
	"SITE_FUNC_TYPE_NORMAL",
}

// NewToolsOrangeSiteGetV30DataListFunctionTypeFromValue returns a pointer to a valid ToolsOrangeSiteGetV30DataListFunctionType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewToolsOrangeSiteGetV30DataListFunctionTypeFromValue(v string) (*ToolsOrangeSiteGetV30DataListFunctionType, error) {
	ev := ToolsOrangeSiteGetV30DataListFunctionType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ToolsOrangeSiteGetV30DataListFunctionType: valid values are %v", v, AllowedToolsOrangeSiteGetV30DataListFunctionTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ToolsOrangeSiteGetV30DataListFunctionType) IsValid() bool {
	for _, existing := range AllowedToolsOrangeSiteGetV30DataListFunctionTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to tools_orange_site_get_v3.0_data_list_function_type value
func (v ToolsOrangeSiteGetV30DataListFunctionType) Ptr() *ToolsOrangeSiteGetV30DataListFunctionType {
	return &v
}
