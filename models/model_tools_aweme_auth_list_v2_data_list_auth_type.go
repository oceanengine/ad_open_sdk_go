/*
Oceanengine Open Api

巨量引擎开放平台 Open Api

API version: 1.1.14
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"fmt"
)

// ToolsAwemeAuthListV2DataListAuthType
type ToolsAwemeAuthListV2DataListAuthType string

// List of tools_aweme_auth_list_v2_data_list_auth_type
const (
	AWEME_ACCOUNT_ToolsAwemeAuthListV2DataListAuthType  ToolsAwemeAuthListV2DataListAuthType = "AWEME_ACCOUNT"
	AWEME_HOMEPAGE_ToolsAwemeAuthListV2DataListAuthType ToolsAwemeAuthListV2DataListAuthType = "AWEME_HOMEPAGE"
	LIVE_ACCOUNT_ToolsAwemeAuthListV2DataListAuthType   ToolsAwemeAuthListV2DataListAuthType = "LIVE_ACCOUNT"
	VIDEO_ITEM_ToolsAwemeAuthListV2DataListAuthType     ToolsAwemeAuthListV2DataListAuthType = "VIDEO_ITEM"
)

// All allowed values of ToolsAwemeAuthListV2DataListAuthType enum
var AllowedToolsAwemeAuthListV2DataListAuthTypeEnumValues = []ToolsAwemeAuthListV2DataListAuthType{
	"AWEME_ACCOUNT",
	"AWEME_HOMEPAGE",
	"LIVE_ACCOUNT",
	"VIDEO_ITEM",
}

// NewToolsAwemeAuthListV2DataListAuthTypeFromValue returns a pointer to a valid ToolsAwemeAuthListV2DataListAuthType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewToolsAwemeAuthListV2DataListAuthTypeFromValue(v string) (*ToolsAwemeAuthListV2DataListAuthType, error) {
	ev := ToolsAwemeAuthListV2DataListAuthType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ToolsAwemeAuthListV2DataListAuthType: valid values are %v", v, AllowedToolsAwemeAuthListV2DataListAuthTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ToolsAwemeAuthListV2DataListAuthType) IsValid() bool {
	for _, existing := range AllowedToolsAwemeAuthListV2DataListAuthTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to tools_aweme_auth_list_v2_data_list_auth_type value
func (v ToolsAwemeAuthListV2DataListAuthType) Ptr() *ToolsAwemeAuthListV2DataListAuthType {
	return &v
}
