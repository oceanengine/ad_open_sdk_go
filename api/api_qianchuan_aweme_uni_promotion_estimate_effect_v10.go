/*
Oceanengine Open Api

巨量引擎开放平台 Open Api


*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"context"
	"net/http"
	"net/url"

	"github.com/oceanengine/ad_open_sdk_go/config"
	. "github.com/oceanengine/ad_open_sdk_go/models"
)

// QianchuanAwemeUniPromotionEstimateEffectV10ApiService QianchuanAwemeUniPromotionEstimateEffectV10Api service
type QianchuanAwemeUniPromotionEstimateEffectV10ApiService service

type ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest struct {
	ctx             context.Context
	ApiService      *QianchuanAwemeUniPromotionEstimateEffectV10ApiService
	advertiserId    *int64
	awemeId         *int64
	productId       *int64
	deliveryTime    *float64
	amount          *int64
	addAmount       *int64
	addDeliveryTime *float64
}

func (r *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest) AdvertiserId(advertiserId int64) *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest {
	r.advertiserId = &advertiserId
	return r
}

// 推广对象的抖音id
func (r *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest) AwemeId(awemeId int64) *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest {
	r.awemeId = &awemeId
	return r
}

// 商品id
func (r *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest) ProductId(productId int64) *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest {
	r.productId = &productId
	return r
}

// 投放时长，单位小时，允许值： 2、6、12、24、48、72、96、120、144、168
func (r *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest) DeliveryTime(deliveryTime float64) *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest {
	r.deliveryTime = &deliveryTime
	return r
}

// 投放金额，单位元
func (r *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest) Amount(amount int64) *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest {
	r.amount = &amount
	return r
}

// 追加的预算，单位元
func (r *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest) AddAmount(addAmount int64) *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest {
	r.addAmount = &addAmount
	return r
}

// 延长的投放时间，单位小时，允许值： 0、24、48、72、96、120、144、168
func (r *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest) AddDeliveryTime(addDeliveryTime float64) *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest {
	r.addDeliveryTime = &addDeliveryTime
	return r
}

func (r *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest) Execute() (*QianchuanAwemeUniPromotionEstimateEffectV10Response, *http.Response, error) {
	return r.ApiService.getExecute(r)
}

func (r *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest) AccessToken(accessToken string) *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest {
	r.ctx = context.WithValue(r.ctx, config.ContextAccessToken, accessToken)
	return r
}

func (r *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest) WithLog(enable bool) *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest {
	if enable {
		r.ctx = context.WithValue(r.ctx, config.ContextEnableLog, true)
	}
	return r
}

/*
OpenApiV10QianchuanAwemeUniPromotionEstimateEffectGet Method for OpenApiV10QianchuanAwemeUniPromotionEstimateEffectGet

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@return ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest
*/
func (a *QianchuanAwemeUniPromotionEstimateEffectV10ApiService) Get(ctx context.Context) *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest {
	return &ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest{
		ApiService: a,
		ctx:        ctx,
	}
}

// Execute executes the request
//
//	@return QianchuanAwemeUniPromotionEstimateEffectV10Response
func (a *QianchuanAwemeUniPromotionEstimateEffectV10ApiService) getExecute(r *ApiOpenApiV10QianchuanAwemeUniPromotionEstimateEffectGetRequest) (*QianchuanAwemeUniPromotionEstimateEffectV10Response, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodGet
		localVarPostBody    interface{}
		formFiles           map[string]*FormFileInfo
		localVarReturnValue *QianchuanAwemeUniPromotionEstimateEffectV10Response
	)

	r.ctx = a.client.prepareCtx(r.ctx)

	localBasePath := a.client.Cfg.GetBasePath()

	localVarPath := localBasePath + "/open_api/v1.0/qianchuan/aweme/uni_promotion/estimate/effect/"

	localVarHeaderParams := make(map[string]string)
	formFiles = make(map[string]*FormFileInfo)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}
	if r.advertiserId == nil {
		return localVarReturnValue, nil, ReportError("advertiserId is required and must be specified")
	}
	if *r.advertiserId < 1 {
		return localVarReturnValue, nil, ReportError("advertiserId must be greater than 1")
	}
	if r.awemeId == nil {
		return localVarReturnValue, nil, ReportError("awemeId is required and must be specified")
	}
	if *r.awemeId < 1 {
		return localVarReturnValue, nil, ReportError("awemeId must be greater than 1")
	}
	if r.productId == nil {
		return localVarReturnValue, nil, ReportError("productId is required and must be specified")
	}
	if *r.productId < 1 {
		return localVarReturnValue, nil, ReportError("productId must be greater than 1")
	}
	if r.deliveryTime == nil {
		return localVarReturnValue, nil, ReportError("deliveryTime is required and must be specified")
	}
	if *r.deliveryTime < 0 {
		return localVarReturnValue, nil, ReportError("deliveryTime must be greater than 0")
	}
	if r.amount == nil {
		return localVarReturnValue, nil, ReportError("amount is required and must be specified")
	}
	if *r.amount < 1 {
		return localVarReturnValue, nil, ReportError("amount must be greater than 1")
	}
	if *r.amount > 5000000 {
		return localVarReturnValue, nil, ReportError("amount must be less than 5000000")
	}

	parameterAddToHeaderOrQuery(localVarQueryParams, "advertiser_id", r.advertiserId)
	parameterAddToHeaderOrQuery(localVarQueryParams, "aweme_id", r.awemeId)
	parameterAddToHeaderOrQuery(localVarQueryParams, "product_id", r.productId)
	parameterAddToHeaderOrQuery(localVarQueryParams, "delivery_time", r.deliveryTime)
	parameterAddToHeaderOrQuery(localVarQueryParams, "amount", r.amount)
	if r.addAmount != nil {
		parameterAddToHeaderOrQuery(localVarQueryParams, "add_amount", r.addAmount)
	}
	if r.addDeliveryTime != nil {
		parameterAddToHeaderOrQuery(localVarQueryParams, "add_delivery_time", r.addDeliveryTime)
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.client.call(r.ctx, req, &localVarReturnValue)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}
